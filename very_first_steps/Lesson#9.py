# open() - Работает только с файлами в Project#1(в папке с программой)       open("Name of File", "w - запись с заменной / r - чтение / a - добавление")

# file = open("123.txt", "w")                         # ..."w" - Открытие файла с удалением всей инфы в нём и записи новой (Если файла с таким именем нет он будет создан# )
# for i in range(0,5):
#     file.write("Wake Up!\n")                          # Вношу в файл фразу 5 раз
# file.close()                                        # Закрытие файла (ОБЯЗАТЕЛЬНО! иначе возможна потеря данных)
# print("Данные в 123.txt изменились!")

# file = open("123.txt","r")                          # ..."r" - Открытие файла и чтение инфы из него (нельзя вносить изменения)
# print(file.read())                                  # .read() - чтение всей инфы из файла
# file.close()

# with open("123.txt", "a") as file:                   # тоже самое что и: "file = open("123.txt","а")" но не нужно уже закрывать файл
#     # Нужен ОТСТУП!
#     file.write("Hey,you. You're finally awake!")            # ... "a" - Открытие файла с возможностью записывать в него инфу, но без удаления прошлой (to add)
#     print("Данные в 123.txt изменились!")                             # Програма работает точно также, только на протяжении блока файл не закрыт
# print("Program is done\n")                            # Вместо .close() можно переставить расставлять отступы

    # Добавление исключений к ошибкам Python

# try:                                        # try: указание какой блок проверять на какую-то ошибку
#     c = True
#     while c == True:                        # Просто цикл, который будет делить два числа пока не ввести команду остановки или не поделить х/0
#         print("Деление двух чисел:")
#         a = input("a=")
#         b = input("b=")
#         if a == "end." or b == "end." or a == "end" or b == "end" or a == "." or b == ".":      # команда остановки цикла
#             c=False
#             continue
#         print(float(a)/float(b))
# except ZeroDivisionError:                   # except Eror: Действие при получении ошибки (ошибка игноpится и выполняются следующие действия)
#     print("Иди учи матешу!")
# print("Я больше работать не буду!")         # При получении ошибки программа не вылетает, она лишь переходит к следующему блоку

# !!! Очень важно: В блок "try:" нужно вносить минимум команд, что бы легко можно было найти БАГ, весь код лучше записывать в "else:" после "except:"

with open('123.txt','r') as f:
    text = f.readlines()
print(text)
print(type(text))
print((len(text)))