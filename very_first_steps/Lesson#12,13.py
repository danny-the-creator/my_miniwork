import re                               # Модуль для регулярных(часто встречающихся) выражений (*работает со строками(string))
text = "SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD "       # Отсчёт с 0 и последнее число не входит (это при выводе)
answer = re.match("SSD", text)              # Поиск на наличие в начале строки (элемент строки, что мы ищем должен совпадать с первыми элементами строки в которой ищем)
answer = re.search("HDD",text)              # re.search() - ищет по всей строке, до первого появления последовательности символов, что мы ищем
answer = re.findall("SSD/HDD", text)        # re.findall() - ищет по всей строку, ВСЕ символы и компанует их в список
answer = re.split("/", text, maxsplit=3)                # как и обычный метод сплит, только с re    (maxsplit=x) - разбивает строку х раз, остаток выводит без разделения
answer = re.sub("SSD", "HDD", text)             # !!! re.sub() заменяет все "SSD" на "HDD" в нашей строке(если элемента "SSD" нет, то замены не произойдёт)
answer = re.fullmatch("SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD SSD/HDD ",text)   # проверяет совпадает введёная строчка с другой строчкой
                                                                                                        # если да: выведет местоположение(длину) нашей строчки (с 0 до конца)
# print(answer)
# print(answer[0])                            # [0] - для вывода самих символов, а не их местоположения



txt = ".png 13.3423--75757744#*(*1q54@hf---__+=hfhjf     -- - - fjfhfhfaakjjafj;:j ghhJ*^7 ghghj--jfd 167867878   ___ ffhgg)"
result = re.search(r"h.f", txt)                                     # r"_"- игнорирует команды в строке, такие как: \n, \t ...
                                                            # "." - заменяет один любой символ при поиске (можно вставлять несколько точек)
result = re.search(r"\d\D\d", txt)                          # \d - заменяет любую цифру \D - заменяет любой символ (.!№%:?) (ищет и выводит любую цифру или символ)
result = re.search(r"\s", txt)                              # \s - поиск пробела или табуляции (конец строки и тд.) (\S - ищет всё кроме, того что ищет \s)
result = re.search(r"\w", txt)                              # \w - поиск буквы, цифры или "_" \W - всё кроме \w (как \S c \s) (буквы работают со всеми языками)
# print(result)
result = re.search(r"\bpng", txt)                   # \b_text_ - ищет наш _text_ в начале или в конце строки (рядом должен быть пробел) \B_text_ - всё кроме \b_text_
result = re.search(r"[3-8]", txt)                   # Выводит первое, что обнаружит в диапазоне (можно просто перечислить элементы) (^[3-8] - будет искать всё кроме [3-8])
result = re.search(r"3|6", txt)                     # | - выводит или то, или то (не ставить пробелы вокруг"|")
# print(result)
result = re.search(r"\d{7}", txt)                   # {n} - повторяет одиночный шаблон n раз
result = re.search(r"\d{7,}", txt)                  # {n,} - выводит не менее n повторений (n and more) {,n} - не более n повторений
# print(result)
                                                # "+", "*" - нужно узнать больше
string = """Уравнение реакции показывает, что при взаимодействии 1 моль железа, масса которого 56 г и 1 моль серы, масса которой 32 г,
          получается 1 моль сульфида железа, масса которого 88 г. То есть для получения сульфида железа массой 88 г требуется железо массой 56 г.
          Отсюда легко определить массу железа, необходимую для получения 17,6 г сульфида железа, составив пропорцию:"""
the_end = re.findall(r"\b[уеыаоэяиюУЕЫАОЭЯИЮ]\w+", string)                      # определяет все слова начинающиеся с гласной в строке
# print(the_end)


